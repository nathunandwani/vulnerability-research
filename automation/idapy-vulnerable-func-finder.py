#Bad functions: https://docs.microsoft.com/en-us/previous-versions/bb288454(v=msdn.10)

strcpy_bad_funcs = [
    'strcpy', 'strcpyA', 'strcpyW', 'wcscpy', '_tcscpy',
    '_mbscpy', 'StrCpy', 'StrCpyA', 'StrCpyW', 'lstrcpy',
    'lstrcpyA', 'lstrcpyW', '_tccpy', '_mbccpy', '_ftcscpy',
    'strncpy', 'wcsncpy', '_tcsncpy', '_mbsncpy', '_mbsnbcpy',
    'StrCpyN', 'StrCpyNA', 'StrCpyNW', 'StrNCpy', 'strcpynA',
    'StrNCpyA', 'StrNCpyW', 'lstrcpyn', 'lstrcpynA', 'lstrcpynW'
]

strcat_bad_funcs = [
    'strcat', 'strcatA', 'strcatW', 'wcscat', '_tcscat',
    '_mbscat', 'StrCat', 'StrCatA', 'StrCatW', 'lstrcat',
    'lstrcatA', 'lstrcatW', 'StrCatBuff', 'StrCatBuffA',
    'StrCatBuffW', 'StrCatChainW', '_tccat', '_mbccat',
    '_ftcscat', 'strncat', 'wcsncat', '_tcsncat', '_mbsncat',
    '_mbsnbcat', 'StrCatN', 'StrCatNA', 'StrCatNW', 'StrNCat',
    'StrNCatA', 'StrNCatW', 'lstrncat', 'lstrcatnA', 'lstrcatnW',
    'lstrcatn'
]

print_bad_funcs = [
    'sprintfW', 'sprintfA', 'wsprintf', 'wsprintfW', 'wsprintfA',
    'sprintf', 'swprintf', '_stprintf', 'wvsprintf',
    'wvsprintfA', 'wvsprintfW', 'vsprintf', '_vstprintf', 'vswprintf'
]

def find_vulnerable_functions(l):
    addr = []
    for functionAddr in Functions():
        for func in l:
            if func in GetFunctionName(functionAddr):        
                xrefs = CodeRefsTo(functionAddr, False)
                for xref in xrefs:
                    if GetMnem(xref).lower() == "call":
                        address = hex(xref)
                        if not address in addr:
                            addr.append(hex(xref))
    return addr

print "strcpy functions: " + str(find_vulnerable_functions(strcpy_bad_funcs))
print "strcat functions: " + str(find_vulnerable_functions(strcat_bad_funcs))
print "print functions: " + str(find_vulnerable_functions(print_bad_funcs))


